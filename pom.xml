<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>ser516.project3</groupId>
	<artifactId>project3</artifactId>
	<packaging>jar</packaging>
	<version>1.0</version>

	<name>Project3</name>
	<url>http://asu.edu</url>

	<properties>
		<yworks.uml.path>\${basedir}/Scripts/Javadoc/doclets/yworks-uml-doclet-3.0_02-jdk1.5</yworks.uml.path>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.3.2</version>
		</dependency>

		<dependency>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>cobertura-maven-plugin</artifactId>
			<version>2.7</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>5.0.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>5.0.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<version>4.12.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-launcher</artifactId>
			<version>1.0.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-runner</artifactId>
			<version>1.0.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>javax.websocket</groupId>
			<artifactId>javax.websocket-api</artifactId>
			<version>1.0</version>
		</dependency>

		<dependency>
			<groupId>org.glassfish.tyrus</groupId>
			<artifactId>tyrus-server</artifactId>
			<version>1.13.1</version>
		</dependency>

		<dependency>
			<groupId>org.glassfish.tyrus</groupId>
			<artifactId>tyrus-client</artifactId>
			<version>1.13.1</version>
		</dependency>

		<dependency>
			<groupId>org.glassfish.tyrus</groupId>
			<artifactId>tyrus-container-grizzly-server</artifactId>
			<version>1.13.1</version>
		</dependency>

		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.json</artifactId>
			<version>1.0.4</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/log4j/log4j -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>

		<dependency>
			<groupId>org.jfree</groupId>
			<artifactId>jfreechart</artifactId>
			<version>1.0.19</version>
		</dependency>

		<dependency>
			<groupId>org.jfree</groupId>
			<artifactId>jcommon</artifactId>
			<version>1.0.23</version>
		</dependency>

		<dependency>
			<groupId>com.weblookandfeel</groupId>
			<artifactId>weblaf-core</artifactId>
			<version>1.2.8</version>
		</dependency>

		<dependency>
			<groupId>com.weblookandfeel</groupId>
			<artifactId>weblaf-ui</artifactId>
			<version>1.2.8</version>
		</dependency>

		<dependency>
			<groupId>com.seaglasslookandfeel</groupId>
			<artifactId>seaglasslookandfeel</artifactId>
			<version>0.2.1</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- Use JDK 1.8 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<!-- Generate executable jar -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<mainClass>ser516.project3.client.Client</mainClass>
						</manifest>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id> <!-- this is used for inheritance merges -->
						<phase>package</phase> <!-- bind to the packaging phase -->
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- https://stackoverflow.com/a/36970518 -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<!-- latest version (2.20.1) does not work well with JUnit5 -->
				<version>2.19.1</version>
				<configuration>
					<!-- TOGGLE THE BELOW VALUE TO RUN TEST CASES WHILE BUILDING -->
					<skipTests>true</skipTests>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.junit.platform</groupId>
						<artifactId>junit-platform-surefire-provider</artifactId>
						<version>1.0.3</version>
					</dependency>
					<dependency>
						<groupId>org.junit.jupiter</groupId>
						<artifactId>junit-jupiter-engine</artifactId>
						<version>5.0.3</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<!-- Doclet -->
					<doclet>ydoc.doclets.YStandard</doclet>
					<docletPath>\${yworks.uml.path}/lib/ydoc.jar:\${yworks.uml.path}/lib/class2svg.jar:\${yworks.uml.path}/resources</docletPath>
					<additionalparam>-umlautogen</additionalparam>
					<!-- bootclasspath required by Sun's JVM -->
					<bootclasspath>${sun.boot.class.path}</bootclasspath>
					<!-- General Javadoc settings -->
					<doctitle>${project.name} (${project.version})</doctitle>
					<show>private</show>
					<!-- Apple's JVM sometimes requires more memory -->
					<additionalJOption>-J-Xmx1024m</additionalJOption>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
